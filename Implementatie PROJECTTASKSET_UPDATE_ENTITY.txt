  method PROJECTTASKSET_UPDATE_ENTITY.
     DATA: ls_request_input_data TYPE ZCL_Z_MVJ_ODATA_FLEXSO_MPC=>TS_PROJECTTASK,
       ls_taakinfo TYPE YXM_FL_TASK.

 IO_DATA_PROVIDER->READ_ENTRY_DATA( IMPORTING es_data = LS_REQUEST_INPUT_DATA ).

 select SINGLE * from YXM_FL_TASK WHERE ID = @LS_REQUEST_INPUT_DATA-IDTASK INTO  @ls_taakinfo.

ls_taakinfo-IDLID = LS_REQUEST_INPUT_DATA-IDLID.
ls_taakinfo-IDPROJECT = LS_REQUEST_INPUT_DATA-IDPROJECT.
ls_taakinfo-TITEL =  LS_REQUEST_INPUT_DATA-PROJECTTITEL.
   ls_taakinfo-DESCRIPTION =  LS_REQUEST_INPUT_DATA-PROJECTDESC.
ls_taakinfo-STATUSID = LS_REQUEST_INPUT_DATA-PROJECTSTATUS.

  UPDATE YXM_FL_TASK FROM ls_taakinfo.
  IF sy-SUBRC = 0.
    er_entity = LS_REQUEST_INPUT_DATA.
  ELSE.
    RAISE EXCEPTION TYPE /IWBEP/CX_MGW_BUSI_EXCEPTION
      EXPORTING
         textid = /IWBEP/CX_MGW_BUSI_EXCEPTION=>BUSINESS_ERROR
         message = 'deze taak bestaat niet'.
  ENDIF.
  endmethod.